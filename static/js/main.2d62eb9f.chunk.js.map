{"version":3,"sources":["components/filter/Filter.module.css","redux/selector.js","redux/actions.js","redux/operations.js","components/contactList/ContactList.js","components/filter/Filter.js","components/contactForm/ContactForm.js","components/App.js","redux/reducer.js","redux/store.js","index.js","components/contactForm/ContactForm.module.css"],"names":["module","exports","loadingSelector","state","contacts","loading","contactsFilterSelector","filter","contactsItemsSelector","items","filteredItemsSelector","createSelector","item","name","toLowerCase","includes","trim","addNewContactsRequest","createAction","addNewContactsSuccess","addNewContactsError","getAllContactsRequest","getAllContactsSuccess","getAllContactsError","filterChange","removeContactsRequest","removeContactsSuccess","removeContactsError","axios","defaults","baseURL","mapDispatchToProps","handleDelete","id","dispatch","a","delete","connect","map","number","type","onClick","handleChange","className","styles","formInput","onChange","evt","target","value","ContactForm","handleSubmit","props","some","alert","newContact","uuidv4","addNewContacts","setState","onSubmit","preventDefault","formMain","this","formLabel","placeholder","pattern","title","required","formBtn","Component","contact","post","data","getAllContacts","get","App","createReducer","_","action","payload","mainReducer","combineReducers","store","configureStore","devTools","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d62eb9f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formInput\":\"Filter_formInput__3f0yv\"};","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const loadingSelector = (state) => state.contacts.loading;\r\nexport const contactsFilterSelector = (state) => state.contacts.filter;\r\nexport const contactsItemsSelector = (state) => state.contacts.items;\r\n\r\nexport const filteredItemsSelector = createSelector(\r\n  [contactsItemsSelector, contactsFilterSelector],\r\n  (items, filter) =>\r\n    items.filter((item) =>\r\n      item.name.toLowerCase().includes(filter.toLowerCase().trim())\r\n    )\r\n);\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addNewContactsRequest = createAction(\"contacts/addNewContactsRequest\");\r\nconst addNewContactsSuccess = createAction(\"contacts/addNewContactsSuccess\");\r\nconst addNewContactsError = createAction(\"contacts/addNewContactsError\");\r\n\r\nconst getAllContactsRequest = createAction(\"contacts/getAllContactsRequest\");\r\nconst getAllContactsSuccess = createAction(\"contacts/getAllContactsSuccess\");\r\nconst getAllContactsError = createAction(\"contacts/getAllContactsError\");\r\n\r\nconst filterChange = createAction(\"contacts/filterChange\");\r\n\r\nconst removeContactsRequest = createAction(\"contacts/removeContactsRequest\");\r\nconst removeContactsSuccess = createAction(\"contacts/removeContactsSuccess\");\r\nconst removeContactsError = createAction(\"contacts/removeContactsError\");\r\n\r\nexport {\r\n  addNewContactsRequest,\r\n  addNewContactsSuccess,\r\n  addNewContactsError,\r\n  getAllContactsRequest,\r\n  getAllContactsSuccess,\r\n  getAllContactsError,\r\n  filterChange,\r\n  removeContactsRequest,\r\n  removeContactsSuccess,\r\n  removeContactsError,\r\n};\r\n\r\n// const addNewToList = createAction(\"list/addToList\");\r\n// const deletedItem = createAction(\"list/deletedItem\");\r\n// const filterChange = createAction(\"filter/filterChange\");\r\n\r\n// export { addNewToList, deletedItem, filterChange };\r\n","import axios from \"axios\";\r\nimport {\r\n  getAllContactsRequest,\r\n  getAllContactsSuccess,\r\n  getAllContactsError,\r\n  addNewContactsRequest,\r\n  addNewContactsSuccess,\r\n  addNewContactsError,\r\n  removeContactsRequest,\r\n  removeContactsSuccess,\r\n  removeContactsError,\r\n} from \"./actions\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:3001/\";\r\n\r\nconst addNewContacts = (contact) => async (dispatch) => {\r\n  dispatch(addNewContactsRequest());\r\n  try {\r\n    const { data } = await axios.post(\"contacts\", contact);\r\n    dispatch(addNewContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addNewContactsError(error));\r\n  }\r\n};\r\n\r\nconst getAllContacts = () => async (dispatch) => {\r\n  dispatch(getAllContactsRequest());\r\n  try {\r\n    const { data } = await axios.get(\"contacts\");\r\n    dispatch(getAllContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(getAllContactsError(error));\r\n  }\r\n};\r\n\r\nconst removeContacts = (id) => async (dispatch) => {\r\n  dispatch(removeContactsRequest());\r\n  try {\r\n    await axios.delete(`contacts/${id}`);\r\n    dispatch(removeContactsSuccess(id));\r\n  } catch (error) {\r\n    dispatch(removeContactsError(error));\r\n  }\r\n};\r\n\r\nexport { addNewContacts, getAllContacts, removeContacts };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { filteredItemsSelector } from \"../../redux/selector\";\r\nimport { removeContacts } from \"../../redux/operations\";\r\n\r\nconst ContactList = ({ items, handleDelete }) => {\r\n  return (\r\n    <ul>\r\n      {items.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          <p>\r\n            {name}: {number}\r\n          </p>\r\n          <button type=\"button\" onClick={() => handleDelete(id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  items: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    items: filteredItemsSelector(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  handleDelete: removeContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\nimport styles from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { filterChange } from \"../../redux/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { contactsFilterSelector } from \"../../redux/selector\";\r\n\r\nconst Filter = ({ filter, handleChange }) => {\r\n  const onChange = (evt) => {\r\n    handleChange(evt.target.value);\r\n  };\r\n  return (\r\n    <div>\r\n      <h2>Find contacts by name</h2>\r\n      <input\r\n        id=\"filter\"\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        className={styles.formInput}\r\n        onChange={onChange}\r\n        value={filter}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  handleChange: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    filter: contactsFilterSelector(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  handleChange: filterChange,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { contactsItemsSelector, loadingSelector } from \"../../redux/selector\";\r\nimport { addNewContacts, getAllContacts } from \"../../redux/operations\";\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    handleSubmit: PropTypes.func.isRequired,\r\n  };\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleSubmit = (name, number) => {\r\n    const isDuplicate = this.props.items.some((item) => item.name === name);\r\n\r\n    if (isDuplicate) {\r\n      alert(name + \" is already in contacts \");\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n\r\n    this.props.addNewContacts(newContact);\r\n  };\r\n\r\n  handleChange = (evt) => {\r\n    this.setState({\r\n      [evt.target.name]: evt.target.value,\r\n    });\r\n  };\r\n\r\n  onSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    this.handleSubmit(this.state.name, this.state.number);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <form className={styles.formMain} onSubmit={this.onSubmit}>\r\n        <label className={styles.formLabel}>\r\n          Name\r\n          <input\r\n            className={styles.formInput}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onChange={this.handleChange}\r\n            value={this.state.name}\r\n            placeholder=\"Enter your name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={styles.formLabel}>\r\n          Number\r\n          <input\r\n            className={styles.formInput}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            onChange={this.handleChange}\r\n            value={this.state.number}\r\n            placeholder=\"123-45-67\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\" className={styles.formBtn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    items: contactsItemsSelector(state),\r\n    loading: loadingSelector(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addNewContacts,\r\n  getAllContacts,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\nimport ContactList from \"./contactList/ContactList\";\nimport Filter from \"./filter/Filter\";\nimport ContactForm from \"./contactForm/ContactForm\";\n\nconst App = () => {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addNewContactsRequest,\r\n  addNewContactsSuccess,\r\n  addNewContactsError,\r\n  getAllContactsRequest,\r\n  getAllContactsSuccess,\r\n  getAllContactsError,\r\n  filterChange,\r\n  removeContactsRequest,\r\n  removeContactsSuccess,\r\n  removeContactsError,\r\n} from \"./actions\";\r\n\r\nconst loading = createReducer(false, {\r\n  [getAllContactsRequest]: () => true,\r\n  [getAllContactsSuccess]: () => false,\r\n  [getAllContactsError]: () => false,\r\n  [addNewContactsRequest]: () => true,\r\n  [addNewContactsSuccess]: () => false,\r\n  [addNewContactsError]: () => false,\r\n  [removeContactsRequest]: () => true,\r\n  [removeContactsSuccess]: () => false,\r\n  [removeContactsError]: () => false,\r\n});\r\n\r\nconst items = createReducer([], {\r\n  [getAllContactsSuccess]: (_, action) => action.payload,\r\n  [addNewContactsSuccess]: (state, action) => [action.payload, ...state],\r\n  [removeContactsSuccess]: (state, action) =>\r\n    state.filter((item) => item.id !== action.payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [filterChange]: (_, action) => action.payload,\r\n});\r\n\r\nconst mainReducer = combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n\r\nexport default mainReducer;\r\n\r\n// import { addNewToList, deletedItem, filterChange } from \"./actions\";\r\n\r\n// const initialState = {\r\n//   items: [],\r\n//   filter: \"\",\r\n// };\r\n\r\n// const mainReducer = createReducer(initialState, {\r\n//   [addNewToList]: (state, action) => ({\r\n//     ...state,\r\n//     items: [action.payload, ...state.items],\r\n//   }),\r\n//   [deletedItem]: (state, action) => ({\r\n//     ...state,\r\n//     items: state.items.filter((item) => item.id !== action.payload),\r\n//   }),\r\n//   [filterChange]: (state, action) => ({\r\n//     ...state,\r\n//     filter: action.payload,\r\n//   }),\r\n// });\r\n\r\n// export default mainReducer;\r\n","import mainReducer from \"./reducer\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst store = configureStore({\r\n  devTools: true,\r\n  reducer: {\r\n    contacts: mainReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport store  from './redux/store'\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\n// import {myAction} from './redux/actions'\n\nReactDOM.render(\n  <>\n    < Provider store={store}>\n    <App />\n    </Provider>\n  </>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formMain\":\"ContactForm_formMain__1Cckp\",\"formLabel\":\"ContactForm_formLabel__255bI\",\"formInput\":\"ContactForm_formInput__2QF9R\",\"formBtn\":\"ContactForm_formBtn__2Z6ad\"};"],"sourceRoot":""}